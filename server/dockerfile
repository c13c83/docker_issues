FROM php:8.1.0-apache
# FROM php:${WEB_TAG}

# 1. development packages
RUN apt-get update \
       && apt-get install -y --no-install-recommends \
       nano \
       libicu-dev \
       libpng-dev \
       git \
       zip \
       unzip \
       vim \
       && rm -rf /var/lib/apt/lists/*

# 2. apache configs + document root
ENV APACHE_DOCUMENT_ROOT=/var/www/html/public
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# 3. mod_rewrite for URL rewrite and mod_headers for .htaccess extra headers like Access-Control-Allow-Origin-
RUN a2enmod rewrite headers

# 4. start with base php config, then add extensions, you set a custom php.ini development or production in server folder
CMD mv "/php_custom/php.ini-development" "$PHP_INI_DIR/php.ini"
# RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# ## set the maximum upload file size (default: 2M)
# RUN touch /usr/local/etc/php/conf.d/uploads.ini \
#     && echo "upload_max_filesize = 10M;" >> /usr/local/etc/php/conf.d/uploads.ini

ADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/
RUN chmod uga+x /usr/local/bin/install-php-extensions && sync \
       && install-php-extensions bz2 \
       gettext \
       intl \
       exif \
       pdo_pgsql \
       bcmath \
       gd \
       && docker-php-ext-install -j$(nproc) gd

# # 5. composer
ADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/
RUN chmod +x /usr/local/bin/install-php-extensions && \
       install-php-extensions @composer 

# # 6. we need a user with the same UID/GID with host user
# # so when we execute CLI commands, all the host file's ownership remains intact
# # otherwise command from inside container will create root-owned files and directories
# ARG uid
# RUN useradd -G www-data,root -u $uid -d /home/devuser devuser
# RUN mkdir -p /home/devuser/.composer && \
#     chown -R devuser:devuser /home/devuser

# 7. update repository and install yarn
RUN apt-get update && apt-get install yarn -y

# 8. install nodejs v18 and npm
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs

# install npm
# RUN apt-get update && apt-get install -y nodejs npm
WORKDIR /var/www/html
# COPY . /var/www/html/
# RUN npm install

# 8.define locale for pt/br
RUN apt-get -y install locales &&\
       sed -i '/pt_BR.UTF-8/s/^# //g' /etc/locale.gen && \
       locale-gen
ENV LANG pt_BR.UTF-8  
ENV LANGUAGE pt_BR:UTF-8  
ENV LC_ALL pt_BR.UTF-8 

# npm packages
# npm install @vuepic/vue-datepicker
# npm install chart.js